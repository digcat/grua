#!/usr/bin/env python

from grua import grua
import yaml, sys, errno, os

args = sys.argv[1:]

grua.yamlpath = grua.find_yaml_location()

os.chdir(grua.yamlpath)


with open(grua.yamlpath + "/grua.yaml", 'r') as stream:
    grua.config = yaml.load(stream)
    if grua.config.has_key('global'):
        if grua.config['global'].has_key('project'):
            grua.Project = grua.config['global']['project']
        if grua.config['global'].has_key('volumepath'):
            grua.VolumePath = grua.config['global']['volumepath']
    for container in grua.config:
        grua.calc_deps(container, grua.config)


# set up configuration path
try:
    os.makedirs(grua.ConfigPath + "/" + grua.Project)
except OSError as exc: # Python >2.5
    if exc.errno == errno.EEXIST and os.path.isdir(grua.ConfigPath + "/" + grua.Project):
        pass
    else: raise


grua.sorted_run_deps = grua.sort_containers()

grua.Mode = grua.get_mode()

if len(args)==0:
    grua.usage()
else:
    try:
        grua.process_command(args)
    except Exception as ex:
        ##print "An unhandled exception occurred: " + e.\
        template = "An exception of type {0} occured. Arguments:\n{1!r} "
        message = template.format(type(ex).__name__, ex.args)
        print
        print "!!!"
        print message
        exc_type, exc_obj, exc_tb = sys.exc_info()
        fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
        print(exc_type, fname, exc_tb.tb_lineno)
        print "!!!"
        print
        raise
        sys.exit(99)
